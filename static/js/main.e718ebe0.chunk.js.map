{"version":3,"sources":["components/Header/Header.js","globals/constants.js","components/InputBlock/constants.js","components/InputBlock/InputBlock.style.js","components/InputBlock/InputBlock.js","components/NumbersBlock/constants.js","components/NumbersBlock/NumbersBlock.style.js","components/NumbersBlock/NumbersBlock.js","pages/Main/Main.style.js","pages/Main/Main.js","theme/theme.js","index.js"],"names":["Header","AppBar","position","Toolbar","Typography","variant","BUTTON","label","INPUT_FIELD","useStyles","makeStyles","theme","inputBlockContainer","display","alignItems","flexDirection","inputAndButtonContainer","marginTop","customStyles","spacing","base","textField","inputWrapper","width","dimension","inputWidth","addButton","height","addButtonHeight","InputBlock","handleInputNumbers","classes","useState","inputValue","setInputValue","handleSubmit","numberInput","Number","className","TextField","fullWidth","onChange","e","target","value","onKeyDown","key","Button","color","onClick","size","TITLE","numbersBlockContainer","cursor","xLarge","itemsBlockContainer","itemContainer","justifyContent","borderBottom","marginBottom","small","numberDataContainer","percentItemWrapper","marginLeft","large","percentItemWidth","totalContainer","totalContentContainer","resetButtonWrapper","NumbersBlock","handleResetList","itemsList","total","length","map","index","id","number","percent","mainContainer","minHeight","contentContainer","padding","Main","setItemsList","setTotal","calcPercent","num","totalValue","parseFloat","toFixed","sum","inputNumbers","item","mappedList","createMuiTheme","xSmall","MAIN_SPACING_VALUE","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e718ebe0.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { PROJECT_TITLE } from '../../globals/constants';\n\nconst Header = () => {\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <div>\n            <Typography variant=\"h5\">{PROJECT_TITLE}</Typography>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","export const PROJECT_TITLE = 'Percentage Counter Chart';\n","export const BUTTON = {\n  add: {\n    label: 'Add',\n  },\n};\nexport const INPUT_FIELD = {\n  placeholder: 'Number',\n};\nexport const TITLE = 'Input number';\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  inputBlockContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n  },\n  inputAndButtonContainer: {\n    display: 'flex',\n    marginTop: theme.customStyles.spacing.base,\n  },\n  textField: {\n    [`& fieldset`]: {\n      'border-top-right-radius': 0,\n      'border-bottom-right-radius': 0,\n    },\n  },\n  inputWrapper: {\n    width: '100%',\n    '@media only screen and (min-width: 600px)': {\n      width: theme.customStyles.dimension.inputWidth,\n    },\n  },\n  addButton: {\n    'border-top-left-radius': 0,\n    'border-bottom-left-radius': 0,\n    height: theme.customStyles.dimension.addButtonHeight,\n  },\n}));\nexport { useStyles };\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { BUTTON, INPUT_FIELD, TITLE } from './constants';\nimport { useStyles } from './InputBlock.style';\n\nconst InputBlock = ({ handleInputNumbers }) => {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setInputValue('');\n\n    const numberInput = Number(inputValue);\n\n    handleInputNumbers(numberInput);\n  };\n\n  const handleSubmitOnEnter = event => {\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  return (\n    <div className={classes.inputBlockContainer}>\n      <div>\n        <Typography variant=\"h4\">{TITLE}</Typography>\n      </div>\n      <div className={classes.inputAndButtonContainer}>\n        <div className={classes.inputWrapper}>\n          <TextField\n            className={classes.textField}\n            fullWidth\n            label={INPUT_FIELD.placeholder}\n            onChange={e => handleInputChange(e)}\n            onKeyDown={e => handleSubmitOnEnter(e)}\n            value={inputValue}\n            variant=\"outlined\"\n          />\n        </div>\n        <div>\n          <Button\n            className={classes.addButton}\n            color=\"primary\"\n            onClick={handleSubmit}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {BUTTON.add.label}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInputBlock.propTypes = {\n  handleInputNumbers: PropTypes.func.isRequired,\n};\n\nexport default InputBlock;\n","export const BUTTON = {\n  reset: {\n    label: 'Reset',\n  },\n};\nexport const TITLE = {\n  total: 'TOTAL',\n  totalPercentage: '100%',\n};\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  numbersBlockContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    cursor: 'default',\n    marginTop: theme.customStyles.spacing.xLarge,\n  },\n  itemsBlockContainer: {\n    width: '100%',\n  },\n  itemContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    borderBottom: '1px solid black',\n    '&:not(:last-child)': {\n      marginBottom: theme.customStyles.spacing.small,\n    },\n  },\n  numberDataContainer: {\n    display: 'flex',\n  },\n  percentItemWrapper: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginLeft: theme.customStyles.spacing.large,\n    width: theme.customStyles.dimension.percentItemWidth,\n  },\n  totalContainer: {\n    display: 'flex',\n    marginTop: theme.customStyles.spacing.large,\n  },\n  totalContentContainer: {\n    display: 'flex',\n    marginLeft: theme.customStyles.spacing.large,\n  },\n  resetButtonWrapper: {\n    marginTop: theme.customStyles.spacing.xLarge,\n  },\n}));\n\nexport { useStyles };\n","import PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { BUTTON, TITLE } from './constants';\nimport { useStyles } from './NumbersBlock.style';\n\nconst NumbersBlock = ({ handleResetList, itemsList, total }) => {\n  const classes = useStyles();\n\n  const handleReset = () => {\n    handleResetList();\n  };\n\n  return (\n    itemsList.length > 0 && (\n      <div className={classes.numbersBlockContainer}>\n        <div className={classes.itemsBlockContainer}>\n          {itemsList.map(({ id, number, percent }, index) => (\n            <div className={classes.itemContainer} key={id}>\n              <div>\n                <Typography variant=\"h5\">{`${index + 1}.`}</Typography>\n              </div>\n              <div className={classes.numberDataContainer}>\n                <div>\n                  <Typography variant=\"h5\">{number}</Typography>\n                </div>\n                <div className={classes.percentItemWrapper}>\n                  <Typography variant=\"h5\">{`${percent}%`}</Typography>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes.totalContainer}>\n          <div>\n            <Typography variant=\"h5\">{TITLE.total}</Typography>\n          </div>\n          <div className={classes.totalContentContainer}>\n            <div>\n              <Typography variant=\"h5\">{total}</Typography>\n            </div>\n            <div className={classes.percentItemWrapper}>\n              <Typography variant=\"h5\">{TITLE.totalPercentage}</Typography>\n            </div>\n          </div>\n        </div>\n        <div className={classes.resetButtonWrapper}>\n          <Button\n            color=\"secondary\"\n            onClick={handleReset}\n            size=\"large\"\n            variant=\"contained\"\n          >\n            {BUTTON.reset.label}\n          </Button>\n        </div>\n      </div>\n    )\n  );\n};\n\nNumbersBlock.propTypes = {\n  handleResetList: PropTypes.func.isRequired,\n  itemsList: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport default NumbersBlock;\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  mainContainer: {\n    minHeight: '100vh',\n  },\n  contentContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: `${theme.customStyles.spacing.large} ${theme.customStyles.spacing.base}`,\n  },\n}));\n\nexport { useStyles };\n","import { useState } from 'react';\n\nimport Header from '../../components/Header';\nimport InputBlock from '../../components/InputBlock';\nimport NumbersBlock from '../../components/NumbersBlock';\nimport { useStyles } from './Main.style';\n\nconst Main = () => {\n  const classes = useStyles();\n  const [itemsList, setItemsList] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const calcPercent = (num, totalValue) => {\n    const result = (num * 100) / totalValue;\n\n    return parseFloat(result.toFixed(1));\n  };\n\n  const handleInputNumbers = number => {\n    const sum = total + number;\n    const inputNumbers = itemsList.map(item => item.number);\n    const newList = [...inputNumbers, number];\n    const mappedList = newList.map((num, index) => ({\n      id: index,\n      number: num,\n      percent: calcPercent(num, sum),\n    }));\n\n    setItemsList(mappedList);\n\n    setTotal(sum);\n  };\n\n  const handleResetList = () => {\n    setItemsList([]);\n    setTotal(0);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <Header />\n      <div className={classes.contentContainer}>\n        <InputBlock handleInputNumbers={handleInputNumbers} />\n        <NumbersBlock\n          handleResetList={handleResetList}\n          itemsList={itemsList}\n          total={total}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import { createMuiTheme } from '@material-ui/core';\n\nconst ADD_BUTTON_HEIGHT = 56;\nconst INPUT_WIDTH = 300;\nconst MAIN_SPACING_VALUE = 16;\nconst PERCENT_ITEM_WIDTH = 60;\n\nexport const theme = createMuiTheme({\n  customStyles: {\n    dimension: {\n      addButtonHeight: `${ADD_BUTTON_HEIGHT}px`, // 56px\n      inputWidth: `${INPUT_WIDTH}px`, // 300px\n      percentItemWidth: `${PERCENT_ITEM_WIDTH}px`, // 60px\n    },\n    spacing: {\n      xSmall: `${MAIN_SPACING_VALUE / 4}px`, // 4px\n      small: `${MAIN_SPACING_VALUE / 2}px`, // 8px\n      base: `${MAIN_SPACING_VALUE}px`, // 16px\n      large: `${MAIN_SPACING_VALUE * 2}px`, // 32px\n      xLarge: `${MAIN_SPACING_VALUE * 3}px`, // 48px\n    },\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Main from './pages/Main';\nimport { theme } from './theme/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Main />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}